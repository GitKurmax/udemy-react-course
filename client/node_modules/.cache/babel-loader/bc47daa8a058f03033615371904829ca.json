{"ast":null,"code":"import _objectSpread from \"/home/alex/Projects/My projects/udemy-react-course/ecommerce-app/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put } from 'redux-saga/effects';\nimport { queryCollections } from '../../firebase/firebase.queries';\nconst INITIAL_STATE = {\n  collections: null,\n  download: false\n};\nexport const shopReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case 'SET_COLLECTIONS':\n      return _objectSpread({}, state, {\n        collections: action.payload,\n        download: true\n      });\n\n    default:\n      return state;\n  }\n};\nexport const ShopActionTypes = {\n  FETCH_COLLECTIONS_START: 'GET_COLLECTIONS',\n  SET_COLLECTIONS: 'SET_COLLECTIONS'\n};\nexport const actions = {\n  getCollections: () => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\n  }),\n  setCollections: payload => ({\n    type: ShopActionTypes.SET_COLLECTIONS,\n    payload\n  })\n};\nexport function* fetchCollectionsAsync() {\n  try {\n    let data = yield queryCollections();\n    console.log(data);\n    yield put(actions.setCollections(data));\n  } catch (error) {\n    console.log(error.message);\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/home/alex/Projects/My projects/udemy-react-course/ecommerce-app/client/src/redux/shop/shop.saga.js"],"names":["takeLatest","put","queryCollections","INITIAL_STATE","collections","download","shopReducer","state","action","type","payload","ShopActionTypes","FETCH_COLLECTIONS_START","SET_COLLECTIONS","actions","getCollections","setCollections","fetchCollectionsAsync","data","console","log","error","message","fetchCollectionsStart"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,GAArB,QAAgC,oBAAhC;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,WAAW,EAAE,IADK;AAElBC,EAAAA,QAAQ,EAAE;AAFQ,CAAtB;AAKA,OAAQ,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACA,+BACKF,KADL;AAEEH,QAAAA,WAAW,EAAEI,MAAM,CAACE,OAFtB;AAGEL,QAAAA,QAAQ,EAAE;AAHZ;;AAKF;AACE,aAAOE,KAAP;AARF;AAUH,CAXO;AAaR,OAAO,MAAMI,eAAe,GAAG;AAC3BC,EAAAA,uBAAuB,EAAE,iBADE;AAE3BC,EAAAA,eAAe,EAAE;AAFU,CAAxB;AAKP,OAAO,MAAMC,OAAO,GAAG;AACnBC,EAAAA,cAAc,EAAE,OAAO;AAACN,IAAAA,IAAI,EAAEE,eAAe,CAACC;AAAvB,GAAP,CADG;AAEnBI,EAAAA,cAAc,EAAGN,OAAD,KAAc;AAACD,IAAAA,IAAI,EAAEE,eAAe,CAACE,eAAvB;AAAwCH,IAAAA;AAAxC,GAAd;AAFG,CAAhB;AAMP,OAAO,UAAUO,qBAAV,GAAkC;AACrC,MAAI;AACA,QAAIC,IAAI,GAAI,MAAMhB,gBAAgB,EAAlC;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,UAAMjB,GAAG,CAACa,OAAO,CAACE,cAAR,CAAuBE,IAAvB,CAAD,CAAT;AACH,GAJD,CAIE,OAAOG,KAAP,EAAa;AACXF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,OAAlB;AACH;AACJ;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMvB,UAAU,CAACW,eAAe,CAACC,uBAAjB,EAA0CK,qBAA1C,CAAhB;AACH","sourcesContent":["import { takeLatest, put } from 'redux-saga/effects';\nimport { queryCollections } from '../../firebase/firebase.queries';\n\nconst INITIAL_STATE = {\n    collections: null,\n    download: false\n  };\n  \nexport  const shopReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n      case 'SET_COLLECTIONS': \n      return {\n        ...state,\n        collections: action.payload,\n        download: true\n      }\n    default:\n      return state;\n  }\n};\n\nexport const ShopActionTypes = {\n    FETCH_COLLECTIONS_START: 'GET_COLLECTIONS',\n    SET_COLLECTIONS: 'SET_COLLECTIONS'\n}\n\nexport const actions = {\n    getCollections: () => ({type: ShopActionTypes.FETCH_COLLECTIONS_START}),\n    setCollections: (payload) => ({type: ShopActionTypes.SET_COLLECTIONS, payload})\n}\n\n\nexport function* fetchCollectionsAsync() {\n    try {\n        let data =  yield queryCollections();\n        console.log(data)\n        yield put(actions.setCollections(data));\n    } catch (error){\n        console.log(error.message)\n    }\n}\n\nexport function* fetchCollectionsStart() {\n    yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync)\n}"]},"metadata":{},"sourceType":"module"}