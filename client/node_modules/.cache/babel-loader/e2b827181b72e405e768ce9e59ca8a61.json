{"ast":null,"code":"var _jsxFileName = \"/home/alex/Projects/My projects/udemy-react-course/ecommerce-app/client/src/pages/shop/Shop.js\";\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actions } from '../../redux/shop/shop.saga';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview';\nimport CollectionPage from '../collection/collection';\nimport WithSpinner from '../../components/with-spinner/with-spinner';\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n\nconst ShopPage = ({\n  match\n}) => {\n  const download = useSelector(state => state.shop.download);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(actions.getCollections());\n  }, [download]);\n  return React.createElement(\"div\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n      isLoading: !download\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n      isLoading: !download\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n};\n\nexport default ShopPage;","map":{"version":3,"sources":["/home/alex/Projects/My projects/udemy-react-course/ecommerce-app/client/src/pages/shop/Shop.js"],"names":["React","useEffect","useSelector","useDispatch","actions","Route","CollectionsOverview","CollectionPage","WithSpinner","CollectionPageWithSpinner","CollectionsOverviewWithSpinner","ShopPage","match","download","state","shop","dispatch","getCollections","path","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,WAAP,MAAwB,4CAAxB;AAEA,MAAMC,yBAAyB,GAAGD,WAAW,CAACD,cAAD,CAA7C;AACA,MAAMG,8BAA8B,GAAGF,WAAW,CAACF,mBAAD,CAAlD;;AAGA,MAAMK,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC9B,QAAMC,QAAQ,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,QAArB,CAA5B;AACA,QAAMG,QAAQ,GAAGb,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,QAAQ,CAACZ,OAAO,CAACa,cAAR,EAAD,CAAR;AACH,GAFU,EAER,CAACJ,QAAD,CAFQ,CAAT;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAED,KAAK,CAACM,IAAK,EAAjC;AAAoC,IAAA,MAAM,EAAEC,KAAK,IAAI,oBAAC,8BAAD;AAAgC,MAAA,SAAS,EAAE,CAACN;AAA5C,OAA0DM,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEP,KAAK,CAACM,IAAK,gBAA3B;AAA4C,IAAA,MAAM,EAAEC,KAAK,IAAI,oBAAC,yBAAD;AAA2B,MAAA,SAAS,EAAE,CAACN;AAAvC,OAAqDM,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAdD;;AAgBA,eAAeR,QAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actions } from '../../redux/shop/shop.saga';\nimport { Route } from 'react-router-dom';\n\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview';\nimport CollectionPage from '../collection/collection';\nimport WithSpinner from '../../components/with-spinner/with-spinner';\n\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n\n\nconst ShopPage = ({ match }) => {\n  const download = useSelector(state => state.shop.download);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(actions.getCollections())\n}, [download])\n\n  return (\n    <div className='shop-page'>\n      <Route exact path={`${match.path}`} render={props => <CollectionsOverviewWithSpinner isLoading={!download} {...props}/>}/>\n      <Route path={`${match.path}/:collectionId`} render={props => <CollectionPageWithSpinner isLoading={!download} {...props}/>} />\n    </div>\n  );\n}\n\nexport default ShopPage;"]},"metadata":{},"sourceType":"module"}