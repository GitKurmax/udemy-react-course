{"ast":null,"code":"import _objectSpread from \"/home/alex/Projects/My projects/udemy-react-course/ecommerce-app/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { addItemToCart, removeItemFromCart } from './cart.utils';\nimport { all, put, call, takeLatest } from 'redux-saga/effects';\nimport { UserActionTypes } from '../user/user.saga';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\nexport const cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n\n    case CartActionTypes.ADD_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      });\n\n    case CartActionTypes.REMOVE_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      });\n\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return _objectSpread({}, state, {\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      });\n\n    case CartActionTypes.CLEAR_CART:\n      return _objectSpread({}, state, {\n        cartItems: []\n      });\n\n    default:\n      return state;\n  }\n};\nexport const CartActionTypes = {\n  TOGGLE_CART_HIDDEN: 'TOGGLE_CART_HIDDEN',\n  ADD_ITEM: 'ADD_ITEM',\n  CLEAR_ITEM_FROM_CART: \"CLEAR_ITEM_FROM_CART\",\n  REMOVE_ITEM: \"REMOVE_ITEM\",\n  CLEAR_CART: \"CLEAR_CART\"\n};\nexport const actions = {\n  toggleCartHidden: () => ({\n    type: CartActionTypes.TOGGLE_CART_HIDDEN\n  }),\n  addItem: item => ({\n    type: CartActionTypes.ADD_ITEM,\n    payload: item\n  }),\n  removeItem: item => ({\n    type: CartActionTypes.REMOVE_ITEM,\n    payload: item\n  }),\n  clearItemFromCart: item => ({\n    type: CartActionTypes.CLEAR_ITEM_FROM_CART,\n    payload: item\n  }),\n  clearCart: () => ({\n    type: CartActionTypes.CLEAR_CART\n  })\n};\nexport function* clearCartOnSignOut() {\n  yield put(actions.clearCart());\n}\nexport function* onSignOutSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut);\n}\nexport function* cartSaga() {\n  yield all([call(onSignOutSuccess)]);\n}","map":{"version":3,"sources":["/home/alex/Projects/My projects/udemy-react-course/ecommerce-app/client/src/redux/cart/cart.saga.js"],"names":["addItemToCart","removeItemFromCart","all","put","call","takeLatest","UserActionTypes","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","CartActionTypes","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","REMOVE_ITEM","CLEAR_ITEM_FROM_CART","filter","cartItem","id","CLEAR_CART","actions","toggleCartHidden","addItem","item","removeItem","clearItemFromCart","clearCart","clearCartOnSignOut","onSignOutSuccess","SIGN_OUT_SUCCESS","cartSaga"],"mappings":";AAAA,SAASA,aAAT,EAAwBC,kBAAxB,QAAkD,cAAlD;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,SAASC,eAAT,QAAgC,mBAAhC;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB;AAKA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,eAAe,CAACC,kBAArB;AACE,+BACKJ,KADL;AAEEH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFjB;;AAIF,SAAKM,eAAe,CAACE,QAArB;AACE,+BACKL,KADL;AAEEF,QAAAA,SAAS,EAAET,aAAa,CAACW,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACK,OAAzB;AAF1B;;AAIF,SAAKH,eAAe,CAACI,WAArB;AACA,+BACOP,KADP;AAEIF,QAAAA,SAAS,EAAER,kBAAkB,CAACU,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACK,OAAzB;AAFjC;;AAIA,SAAKH,eAAe,CAACK,oBAArB;AACA,+BACOR,KADP;AAEIF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBW,MAAhB,CACXC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBV,MAAM,CAACK,OAAP,CAAeK,EADhC;AAFf;;AAMA,SAAKR,eAAe,CAACS,UAArB;AACA,+BACOZ,KADP;AAEIF,QAAAA,SAAS,EAAE;AAFf;;AAIA;AACE,aAAOE,KAAP;AA7BJ;AA+BD,CAhCM;AAkCP,OAAO,MAAMG,eAAe,GAAG;AAC3BC,EAAAA,kBAAkB,EAAE,oBADO;AAE3BC,EAAAA,QAAQ,EAAE,UAFiB;AAG3BG,EAAAA,oBAAoB,EAAE,sBAHK;AAI3BD,EAAAA,WAAW,EAAE,aAJc;AAK3BK,EAAAA,UAAU,EAAE;AALe,CAAxB;AAQP,OAAO,MAAMC,OAAO,GAAG;AACnBC,EAAAA,gBAAgB,EAAE,OAAO;AACrBZ,IAAAA,IAAI,EAAEC,eAAe,CAACC;AADD,GAAP,CADC;AAInBW,EAAAA,OAAO,EAAEC,IAAI,KAAK;AACdd,IAAAA,IAAI,EAAEC,eAAe,CAACE,QADR;AAEdC,IAAAA,OAAO,EAAEU;AAFK,GAAL,CAJM;AAQnBC,EAAAA,UAAU,EAAED,IAAI,KAAK;AACjBd,IAAAA,IAAI,EAAEC,eAAe,CAACI,WADL;AAEjBD,IAAAA,OAAO,EAAEU;AAFQ,GAAL,CARG;AAYnBE,EAAAA,iBAAiB,EAAEF,IAAI,KAAK;AACxBd,IAAAA,IAAI,EAAEC,eAAe,CAACK,oBADE;AAExBF,IAAAA,OAAO,EAAEU;AAFe,GAAL,CAZJ;AAgBnBG,EAAAA,SAAS,EAAE,OAAO;AACdjB,IAAAA,IAAI,EAAEC,eAAe,CAACS;AADR,GAAP;AAhBQ,CAAhB;AAqBP,OAAO,UAAUQ,kBAAV,GAA+B;AAClC,QAAM5B,GAAG,CAACqB,OAAO,CAACM,SAAR,EAAD,CAAT;AACH;AAED,OAAO,UAAUE,gBAAV,GAA6B;AAChC,QAAM3B,UAAU,CAACC,eAAe,CAAC2B,gBAAjB,EAAmCF,kBAAnC,CAAhB;AACH;AAED,OAAO,UAAUG,QAAV,GAAqB;AACxB,QAAMhC,GAAG,CAAC,CAACE,IAAI,CAAC4B,gBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import { addItemToCart, removeItemFromCart } from './cart.utils';\nimport { all, put, call, takeLatest } from 'redux-saga/effects';\nimport { UserActionTypes } from '../user/user.saga';\n\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nexport const cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return {\n        ...state,\n        hidden: !state.hidden\n      };\n    case CartActionTypes.ADD_ITEM:\n      return {\n        ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n    case CartActionTypes.REMOVE_ITEM:\n    return {\n        ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n    };\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n    return {\n        ...state,\n        cartItems: state.cartItems.filter(\n        cartItem => cartItem.id !== action.payload.id\n        )\n    };\n    case CartActionTypes.CLEAR_CART:\n    return {\n        ...state,\n        cartItems: []\n    };\n    default:\n      return state;\n  }\n};\n\nexport const CartActionTypes = {\n    TOGGLE_CART_HIDDEN: 'TOGGLE_CART_HIDDEN',\n    ADD_ITEM: 'ADD_ITEM',\n    CLEAR_ITEM_FROM_CART: \"CLEAR_ITEM_FROM_CART\",\n    REMOVE_ITEM: \"REMOVE_ITEM\",\n    CLEAR_CART: \"CLEAR_CART\" \n  };\n  \nexport const actions = {\n    toggleCartHidden: () => ({\n        type: CartActionTypes.TOGGLE_CART_HIDDEN\n    }),\n    addItem: item => ({\n        type: CartActionTypes.ADD_ITEM,\n        payload: item\n    }),\n    removeItem: item => ({\n        type: CartActionTypes.REMOVE_ITEM,\n        payload: item\n    }),\n    clearItemFromCart: item => ({\n        type: CartActionTypes.CLEAR_ITEM_FROM_CART,\n        payload: item\n    }),\n    clearCart: () => ({\n        type: CartActionTypes.CLEAR_CART,\n    })\n}\n\nexport function* clearCartOnSignOut() {\n    yield put(actions.clearCart())\n}\n\nexport function* onSignOutSuccess() {\n    yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut)\n}\n\nexport function* cartSaga() {\n    yield all([call(onSignOutSuccess)])\n}\n"]},"metadata":{},"sourceType":"module"}