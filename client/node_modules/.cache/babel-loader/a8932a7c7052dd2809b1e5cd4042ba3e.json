{"ast":null,"code":"var _jsxFileName = \"/home/alex/Projects/My projects/udemy-react-course/ecommerce-app/client/src/components/collection-item/CollectionItem.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { actions as cartActions } from '../../redux/cart/cart.saga';\nimport { CollectionItemElem, BackgroundImageElem, CollectionFooter, StyledButton } from './collectio-item.styles';\n\nconst CollectionItem = ({\n  item,\n  addItem,\n  width\n}) => {\n  const name = item.name,\n        price = item.price,\n        imageUrl = item.imageUrl;\n  return React.createElement(CollectionItemElem, {\n    width: width,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(BackgroundImageElem, {\n    url: imageUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(CollectionFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, name), React.createElement(\"span\", {\n    className: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, price)), React.createElement(StyledButton, {\n    onClick: () => addItem(item),\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Add to cart\"));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(cartActions.addItem(item))\n});\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);","map":{"version":3,"sources":["/home/alex/Projects/My projects/udemy-react-course/ecommerce-app/client/src/components/collection-item/CollectionItem.js"],"names":["React","connect","actions","cartActions","CollectionItemElem","BackgroundImageElem","CollectionFooter","StyledButton","CollectionItem","item","addItem","width","name","price","imageUrl","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,OAAO,IAAIC,WAApB,QAAuC,4BAAvC;AAEA,SAASC,kBAAT,EAA6BC,mBAA7B,EAAkDC,gBAAlD,EAAoEC,YAApE,QAAwF,yBAAxF;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,KAA6B;AAAA,QAC1CC,IAD0C,GAChBH,IADgB,CAC1CG,IAD0C;AAAA,QACpCC,KADoC,GAChBJ,IADgB,CACpCI,KADoC;AAAA,QAC7BC,QAD6B,GAChBL,IADgB,CAC7BK,QAD6B;AAGlD,SACE,oBAAC,kBAAD;AAAoB,IAAA,KAAK,EAAIH,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAqB,IAAA,GAAG,EAAEG,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBF,IAAxB,CADF,EAEE;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBC,KAAzB,CAFF,CAFF,EAME,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAE,MAAMH,OAAO,CAACD,IAAD,CAApC;AAA4C,IAAA,QAAQ,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF,CADF;AAYD,CAfD;;AAiBA,MAAMM,kBAAkB,GAAGC,QAAQ,KAAK;AACrCN,EAAAA,OAAO,EAAED,IAAI,IAAIO,QAAQ,CAACb,WAAW,CAACO,OAAZ,CAAoBD,IAApB,CAAD;AADY,CAAL,CAAnC;;AAIA,eAAeR,OAAO,CACpB,IADoB,EAEpBc,kBAFoB,CAAP,CAGbP,cAHa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { actions as cartActions } from '../../redux/cart/cart.saga';\n\nimport { CollectionItemElem, BackgroundImageElem, CollectionFooter, StyledButton } from './collectio-item.styles';\n\nconst CollectionItem = ({ item, addItem, width}) => {\n  const { name, price, imageUrl } = item;\n\n  return (\n    <CollectionItemElem width = {width}>\n      <BackgroundImageElem url={imageUrl}/>\n      <CollectionFooter>\n        <span className='name'>{name}</span>\n        <span className='price'>{price}</span>\n      </CollectionFooter>\n      <StyledButton onClick={() => addItem(item)} inverted>\n        Add to cart\n      </StyledButton>\n    </CollectionItemElem>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n   addItem: item => dispatch(cartActions.addItem(item))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(CollectionItem);"]},"metadata":{},"sourceType":"module"}