{"ast":null,"code":"import _objectSpread from \"/home/alex/Projects/My projects/udemy-react-course/ecommerce-app/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nconst INITIAL_STATE = {\n  currentUser: null,\n  error: null\n};\nexport const userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UserActionTypes.SIGN_IN_SUCCESS:\n      return _objectSpread({}, state, {\n        currentUser: action.payload,\n        error: null\n      });\n\n    case UserActionTypes.SIGN_OUT_SUCCESS:\n      return _objectSpread({}, state, {\n        currentUser: null,\n        error: null\n      });\n\n    case UserActionTypes.SIGN_IN_FAILURE:\n    case UserActionTypes.SIGN_OUT_FAILURE:\n    case UserActionTypes.SIGN_UP_FAILURE:\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\nexport const UserActionTypes = {\n  SET_CURRENT_USER: 'SET_CURRENT_USER',\n  GOOGLE_SIGN_IN_START: 'GOOGLE_SIGN_IN_START',\n  EMAIL_SIGN_IN_START: 'EMAIL_SIGN_IN_START',\n  SIGN_IN_SUCCESS: 'SIGN_IN_SUCCESS',\n  SIGN_IN_FAILURE: 'SIGN_IN_FAILURE',\n  CHECK_USER_SESSION: 'CHECK_USER_SESSION',\n  SIGN_OUT_START: 'SIGN_OUT_START',\n  SIGN_OUT_SUCCESS: 'SIGN_OUT_SUCCESS',\n  SIGN_OUT_FAILURE: 'SIGN_OUT_FAILURE',\n  SIGN_UP_START: 'SIGN_UP_START',\n  SIGN_UP_SUCCESS: 'SIGN_UP_SUCCESS',\n  SIGN_UP_FAILURE: 'SIGN_UP_FAILURE'\n};\nexport const actions = {\n  googleSignInStart: () => ({\n    type: UserActionTypes.GOOGLE_SIGN_IN_START\n  }),\n  signInSuccess: user => ({\n    type: UserActionTypes.SIGN_IN_SUCCESS,\n    payload: user\n  }),\n  signInFailure: error => ({\n    type: UserActionTypes.SIGN_IN_FAILURE,\n    payload: error\n  }),\n  emailSignInStart: emailAndPassword => ({\n    type: UserActionTypes.EMAIL_SIGN_IN_START,\n    payload: emailAndPassword\n  }),\n  checkUserSession: () => ({\n    type: UserActionTypes.CHECK_USER_SESSION\n  }),\n  signOutStart: () => ({\n    type: UserActionTypes.SIGN_OUT_START\n  }),\n  signOutSuccess: () => ({\n    type: UserActionTypes.SIGN_OUT_SUCCESS\n  }),\n  signOutFailure: error => ({\n    type: UserActionTypes.SIGN_OUT_FAILURE,\n    payload: error\n  }),\n  signUpStart: userCredentials => ({\n    type: UserActionTypes.SIGN_UP_START,\n    payload: userCredentials\n  }),\n  signUpSuccess: ({\n    user,\n    additionalData\n  }) => ({\n    type: UserActionTypes.SIGN_UP_SUCCESS,\n    payload: {\n      user,\n      additionalData\n    }\n  }),\n  signUpFailure: error => ({\n    type: UserActionTypes.SIGN_UP_FAILURE,\n    payload: error\n  })\n};\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(actions.signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(actions.signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(actions.signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(actions.signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(actions.signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(actions.signOutSuccess());\n  } catch (error) {\n    yield put(actions.signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield put(actions.signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(actions.signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/home/alex/Projects/My projects/udemy-react-course/ecommerce-app/client/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","auth","googleProvider","createUserProfileDocument","getCurrentUser","INITIAL_STATE","currentUser","error","userReducer","state","action","type","UserActionTypes","SIGN_IN_SUCCESS","payload","SIGN_OUT_SUCCESS","SIGN_IN_FAILURE","SIGN_OUT_FAILURE","SIGN_UP_FAILURE","SET_CURRENT_USER","GOOGLE_SIGN_IN_START","EMAIL_SIGN_IN_START","CHECK_USER_SESSION","SIGN_OUT_START","SIGN_UP_START","SIGN_UP_SUCCESS","actions","googleSignInStart","signInSuccess","user","signInFailure","emailSignInStart","emailAndPassword","checkUserSession","signOutStart","signOutSuccess","signOutFailure","signUpStart","userCredentials","signUpSuccess","additionalData","signUpFailure","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","signInWithGoogle","signInWithPopup","signInWithEmail","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","onGoogleSignInStart","onEmailSignInStart","onCheckUserSession","onSignOutStart","onSignUpStart","onSignUpSuccess","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport {\n    auth,\n    googleProvider,\n    createUserProfileDocument,\n    getCurrentUser\n  } from '../../firebase/firebase.utils';\n  \n\nconst INITIAL_STATE = {\n    currentUser: null,\n    error: null\n  };\n  \nexport const userReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n      case UserActionTypes.SIGN_IN_SUCCESS:\n        return {\n          ...state,\n          currentUser: action.payload,\n          error: null\n        };\n      case UserActionTypes.SIGN_OUT_SUCCESS:\n        return {\n          ...state,\n          currentUser: null,\n          error: null\n        };\n      case UserActionTypes.SIGN_IN_FAILURE:\n      case UserActionTypes.SIGN_OUT_FAILURE:\n      case UserActionTypes.SIGN_UP_FAILURE:\n        return {\n          ...state,\n          error: action.payload\n        };\n      default:\n        return state;\n    }\n};\n  \nexport const UserActionTypes = {\n    SET_CURRENT_USER: 'SET_CURRENT_USER',\n    GOOGLE_SIGN_IN_START: 'GOOGLE_SIGN_IN_START',\n    EMAIL_SIGN_IN_START: 'EMAIL_SIGN_IN_START',\n    SIGN_IN_SUCCESS: 'SIGN_IN_SUCCESS',\n    SIGN_IN_FAILURE: 'SIGN_IN_FAILURE',\n    CHECK_USER_SESSION: 'CHECK_USER_SESSION',\n    SIGN_OUT_START: 'SIGN_OUT_START',\n    SIGN_OUT_SUCCESS: 'SIGN_OUT_SUCCESS',\n    SIGN_OUT_FAILURE: 'SIGN_OUT_FAILURE',\n    SIGN_UP_START: 'SIGN_UP_START',\n    SIGN_UP_SUCCESS: 'SIGN_UP_SUCCESS',\n    SIGN_UP_FAILURE: 'SIGN_UP_FAILURE'\n}\n\nexport const actions = {\n    googleSignInStart: () => ({\n        type: UserActionTypes.GOOGLE_SIGN_IN_START\n    }),\n    signInSuccess: user => ({\n        type: UserActionTypes.SIGN_IN_SUCCESS,\n        payload: user\n    }),\n    signInFailure: error => ({\n        type: UserActionTypes.SIGN_IN_FAILURE,\n        payload: error\n    }),\n    emailSignInStart: emailAndPassword => ({\n        type: UserActionTypes.EMAIL_SIGN_IN_START,\n        payload: emailAndPassword\n    }),\n    checkUserSession: () => ({\n        type: UserActionTypes.CHECK_USER_SESSION\n    }),\n    signOutStart: () => ({\n        type: UserActionTypes.SIGN_OUT_START\n    }),\n    signOutSuccess: () => ({\n        type: UserActionTypes.SIGN_OUT_SUCCESS\n    }),\n    signOutFailure: error => ({\n        type: UserActionTypes.SIGN_OUT_FAILURE,\n        payload: error\n    }),\n    signUpStart: userCredentials => ({\n        type: UserActionTypes.SIGN_UP_START,\n        payload: userCredentials\n    }),\n    signUpSuccess:({ user, additionalData }) => ({\n        type: UserActionTypes.SIGN_UP_SUCCESS,\n        payload: { user, additionalData }\n    }),\n    signUpFailure: error => ({\n        type: UserActionTypes.SIGN_UP_FAILURE,\n        payload: error\n    })\n}\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n    try {\n      const userRef = yield call(\n        createUserProfileDocument,\n        userAuth,\n        additionalData\n      );\n      const userSnapshot = yield userRef.get();\n      yield put( actions.signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n    } catch (error) {\n      yield put(actions.signInFailure(error));\n    }\n  }\n  \n  export function* signInWithGoogle() {\n    try {\n      const { user } = yield auth.signInWithPopup(googleProvider);\n      yield getSnapshotFromUserAuth(user);\n    } catch (error) {\n      yield put(actions.signInFailure(error));\n    }\n  }\n  \n  export function* signInWithEmail({ payload: { email, password } }) {\n    try {\n      const { user } = yield auth.signInWithEmailAndPassword(email, password);\n      yield getSnapshotFromUserAuth(user);\n    } catch (error) {\n      yield put(actions.signInFailure(error));\n    }\n  }\n  \n  export function* isUserAuthenticated() {\n    try {\n      const userAuth = yield getCurrentUser();\n      if (!userAuth) return;\n      yield getSnapshotFromUserAuth(userAuth);\n    } catch (error) {\n      yield put(actions.signInFailure(error));\n    }\n  }\n  \n  export function* signOut() {\n    try {\n      yield auth.signOut();\n      yield put(actions.signOutSuccess());\n    } catch (error) {\n      yield put(actions.signOutFailure(error));\n    }\n  }\n  \n  export function* signUp({ payload: { email, password, displayName } }) {\n    try {\n      const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n      yield put(actions.signUpSuccess({ user, additionalData: { displayName } }));\n    } catch (error) {\n      yield put(actions.signUpFailure(error));\n    }\n  }\n  \n  export function* signInAfterSignUp({ payload: { user, additionalData } }) {\n    yield getSnapshotFromUserAuth(user, additionalData);\n  }\n  \n  export function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n  }\n  \n  export function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n  }\n  \n  export function* onCheckUserSession() {\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n  }\n  \n  export function* onSignOutStart() {\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n  }\n  \n  export function* onSignUpStart() {\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n  }\n  \n  export function* onSignUpSuccess() {\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n  }\n  \n  export function* userSagas() {\n    yield all([\n      call(onGoogleSignInStart),\n      call(onEmailSignInStart),\n      call(isUserAuthenticated),\n      call(onSignOutStart),\n      call(onSignUpStart),\n      call(onSignUpSuccess)\n    ]);\n  }"]},"metadata":{},"sourceType":"module"}